Декоратор класса
Декоратор класса — это функция, которая принимает класс в качестве аргумента и  модифицирует или расширенными его свойства и методы.

Служит для дополнения самого класса.


@staticmethod – декоратор, который позволяет вызывать метод напрямую через имя класса.

@classmethod – декоратор, который позволяет дополнить метод, который получает класс в качестве первого аргумента.

​@property​ – декоратор, который позволяет работать с методом класса как с атрибутом.



Что, когда использовать?

@staticmethod не знает о состоянии текущего экземпляра. Используем, если метод  не выполняет какие-либо операции с другими частями класса.

@classmethod используется, когда нужно получить атрибуты, не относящиеся к какому-либо конкретному экземпляру, но тем не менее, каким-то образом привязанные к классу.

@property​ позволяет работать с методом некоторого класса как с атрибутом. Используем, чтобы отделить свойства класса от методов, позволив обращаться к "вычисляемым" свойствам не как к функциям, а как к полям.